version: 'build #{build}'
branches:
  only:
  - master
  - ci-buildability

environment:
  matrix:
    - BUILD_TYPE: 386_mingw_static
      MINGW_PATH: C:\msys64\mingw32\bin
      CMAKE_FLAGS: -G "MinGW Makefiles" -DBUILD_SHARED_LIBS=OFF
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      ARTIFACT_PREFIX: libui-static-mingw-ia32

    - BUILD_TYPE: 386_msvc_static
      CMAKE_FLAGS: -G "Visual Studio 12 2013" -DBUILD_SHARED_LIBS=OFF
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2013
      ARTIFACT_PREFIX: libui-static-windows-ia32

    - BUILD_TYPE: 386_shared
      CMAKE_FLAGS: -G "Visual Studio 12 2013"
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2013
      ARTIFACT_PREFIX: shared-windows-ia32

    - BUILD_TYPE: amd64_mingw_static
      MINGW_PATH: C:\msys64\mingw64\bin
      CMAKE_FLAGS: -G "MinGW Makefiles" -DBUILD_SHARED_LIBS=OFF
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      ARTIFACT_PREFIX: libui-static-mingw-x64

    - BUILD_TYPE: amd64_msvc_static
      CMAKE_FLAGS: -G "Visual Studio 12 2013 Win64" -DBUILD_SHARED_LIBS=OFF
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2013
      ARTIFACT_PREFIX: libui-static-windows-x64

    - BUILD_TYPE: amd64_shared
      CMAKE_FLAGS: -G "Visual Studio 12 2013 Win64"
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2013
      ARTIFACT_PREFIX: libui-shared-windows-x64


before_build:
    - if defined MINGW_PATH (
        set "PATH=%MINGW_PATH%;%PATH:C:\Program Files\Git\usr\bin;=%"
      )

build_script:
    - md build && cd build && cmake %CMAKE_FLAGS% ..
    - if defined MINGW_PATH (
        mingw32-make tester examples
      ) else (
        msbuild libui.sln /t:Build /p:Configuration=Release
      )

after_build:
    - set ARTIFACTS_TMP_PATH=C:\tmp\tmp-artifacts
    - mkdir %ARTIFACTS_TMP_PATH%
    - copy out\Release\libui.* %ARTIFACTS_TMP_PATH%
    - copy ../ui.h %ARTIFACTS_PATH%
    - copy ../ui_windows.h %ARTIFACTS_PATH%
    - 7z a -ttar libui-%ARTIFACT_PREFIX%-%APPVEYOR_REPO_TAG_NAME%.tar %ARTIFACTS_TMP_PATH%\*.*
    - 7z a -tgzip libui-%ARTIFACT_PREFIX%-%APPVEYOR_REPO_TAG_NAME%.tar.gz libui-%ARTIFACT_PREFIX%-%APPVEYOR_REPO_TAG_NAME%.tar
    - del %ARTIFACTS_TMP_PATH%\*.*
    - copy out\Release\*.* %ARTIFACTS_TMP_PATH%
    - 7z a -ttar libui-%ARTIFACT_PREFIX%-%APPVEYOR_REPO_TAG_NAME%.tar %ARTIFACTS_TMP_PATH%\*.*
    - 7z a -tgzip libui-%ARTIFACT_PREFIX%-%APPVEYOR_REPO_TAG_NAME%.tar.gz libui-%ARTIFACT_PREFIX%-%APPVEYOR_REPO_TAG_NAME%.tar
    - dir /S *.tar.gz

artifacts:
  - path: '*.tar.gz'

deploy:
  provider: GitHub
  auth_token:
    secure: C4wvJEXNqiCYWCJpEkaAJypCfz67SGAxC6b9+jYapuobe4oUn0vqx06qQc0x0vMh
  artifact: /.*\.tar\.gz/

  force_update: true
  on:
    appveyor_repo_tag: true        # deploy on tag push only

